// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  created_at      DateTime         @default(now())
  user_id         String?          @unique // For external provider IDs
  email           String           @unique
  full_name       String?
  avatar_url      String?
  auth_provider   String?
  email_verified  Boolean          @default(false)
  phone           String?
  last_sign_in_at DateTime?
  updated_at      DateTime         @updatedAt
  provider_id     String?
  provider_sub    String?
  is_anonymous    Boolean          @default(false)
  role            String?          @default("user")
  refresh_token   String?
  onboardingData  OnboardingData[]
  Note            Note[]
}

model OnboardingData {
  id               String   @id @default(cuid())
  userId           String?
  jobTitle         String
  company          String? // Made optional since it's not always applicable
  experience       String
  topSkills        String[]
  enjoyDislike     String?
  motivators       String // TODO : multi select bana do ise 
  timeForGrowth    String
  linkedinUrl      String?
  industryInterest String
  biggestConcern   String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  User             User?    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Waitlist {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  created_at DateTime @default(now())
}

model Note {
  id             String   @id @default(cuid())
  text           String   @db.Text
  userId         String
  conversationId String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  User User? @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([conversationId])
}
